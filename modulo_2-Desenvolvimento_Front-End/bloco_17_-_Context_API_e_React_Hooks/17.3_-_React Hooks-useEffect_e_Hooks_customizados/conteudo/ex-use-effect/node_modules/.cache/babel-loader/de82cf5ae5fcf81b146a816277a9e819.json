{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nfunction useTimer() {\n  _s();\n\n  const [number, setNumber] = useState(1); // const [isMultiple, setMultiple] = useState(false);\n\n  const [timer, setTimer] = useState(1);\n  const TIMER_INTERVAL = 1000;\n  const NUMBER_TIMEOUT = 5000; // const MESSAGE_TIMEOUT = 4000;\n\n  const MIN_RANDOM = 1;\n  const MAX_RANDOM = 100;\n\n  const increaseTimerInterval = () => setTimer(timer => timer + 1); // const verifyMultiple = randomNumber => {\n  //   if (randomNumber % 3 === 0 || randomNumber % 5 === 0) {\n  //     setMultiple(true);\n  //     setTimeout(() => setMultiple(false), MESSAGE_TIMEOUT);\n  //   }\n  // };\n\n\n  const handleRandomNumber = () => {\n    const randomNumber = Math.round(Math.floor(Math.random() * MAX_RANDOM) + MIN_RANDOM); // verifyMultiple(randomNumber);\n\n    setNumber(randomNumber);\n    setTimer(0);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(handleRandomNumber, NUMBER_TIMEOUT);\n    const setTimerInterval = setInterval(increaseTimerInterval, TIMER_INTERVAL);\n    return () => {\n      clearInterval(interval);\n      clearInterval(setTimerInterval);\n    };\n  }, []);\n  return {\n    number,\n    isMultiple,\n    timer\n  };\n}\n\n_s(useTimer, \"lMc9SiTrU05EIJlBC0TaBG3Ifvw=\");\n\nexport default useTimer;","map":{"version":3,"sources":["/home/maria/trybe/trybe-exercises/modulo_2-Desenvolvimento_Front-End/bloco_17_-_Context_API_e_React_Hooks/17.3_-_React Hooks-useEffect_e_Hooks_customizados/conteudo/ex-use-effect/src/useTimer.js"],"names":["useState","useEffect","useTimer","number","setNumber","timer","setTimer","TIMER_INTERVAL","NUMBER_TIMEOUT","MIN_RANDOM","MAX_RANDOM","increaseTimerInterval","handleRandomNumber","randomNumber","Math","round","floor","random","interval","setInterval","setTimerInterval","clearInterval","isMultiple"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC,CADkB,CAElB;;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMO,cAAc,GAAG,IAAvB;AACA,QAAMC,cAAc,GAAG,IAAvB,CANkB,CAOlB;;AACA,QAAMC,UAAU,GAAG,CAAnB;AACA,QAAMC,UAAU,GAAG,GAAnB;;AAEA,QAAMC,qBAAqB,GAAG,MAAML,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAA5C,CAXkB,CAalB;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMO,kBAAkB,GAAG,MAAM;AAC/B,UAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,KAAgBP,UAA3B,IAAyCD,UAApD,CAArB,CAD+B,CAE/B;;AACAL,IAAAA,SAAS,CAACS,YAAD,CAAT;AACAP,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GALD;;AAOAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,QAAQ,GAAGC,WAAW,CAACP,kBAAD,EAAqBJ,cAArB,CAA5B;AACA,UAAMY,gBAAgB,GAAGD,WAAW,CAACR,qBAAD,EAAwBJ,cAAxB,CAApC;AACA,WAAO,MAAM;AACXc,MAAAA,aAAa,CAACH,QAAD,CAAb;AACAG,MAAAA,aAAa,CAACD,gBAAD,CAAb;AACD,KAHD;AAID,GAPQ,EAON,EAPM,CAAT;AASA,SAAO;AAAEjB,IAAAA,MAAF;AAAUmB,IAAAA,UAAV;AAAsBjB,IAAAA;AAAtB,GAAP;AACD;;GArCQH,Q;;AAuCT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useTimer() {\n  const [number, setNumber] = useState(1);\n  // const [isMultiple, setMultiple] = useState(false);\n  const [timer, setTimer] = useState(1);\n\n  const TIMER_INTERVAL = 1000;\n  const NUMBER_TIMEOUT = 5000;\n  // const MESSAGE_TIMEOUT = 4000;\n  const MIN_RANDOM = 1;\n  const MAX_RANDOM = 100;\n\n  const increaseTimerInterval = () => setTimer(timer => timer + 1);\n\n  // const verifyMultiple = randomNumber => {\n  //   if (randomNumber % 3 === 0 || randomNumber % 5 === 0) {\n  //     setMultiple(true);\n  //     setTimeout(() => setMultiple(false), MESSAGE_TIMEOUT);\n  //   }\n  // };\n\n  const handleRandomNumber = () => {\n    const randomNumber = Math.round(Math.floor(Math.random() * MAX_RANDOM) + MIN_RANDOM);\n    // verifyMultiple(randomNumber);\n    setNumber(randomNumber);\n    setTimer(0);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(handleRandomNumber, NUMBER_TIMEOUT);\n    const setTimerInterval = setInterval(increaseTimerInterval, TIMER_INTERVAL);\n    return () => {\n      clearInterval(interval);\n      clearInterval(setTimerInterval);\n    };\n  }, []);\n\n  return { number, isMultiple, timer };\n}\n\nexport default useTimer;"]},"metadata":{},"sourceType":"module"}