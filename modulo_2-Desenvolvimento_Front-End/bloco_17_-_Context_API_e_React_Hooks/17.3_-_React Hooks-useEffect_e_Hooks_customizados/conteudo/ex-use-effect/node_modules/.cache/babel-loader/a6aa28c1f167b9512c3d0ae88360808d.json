{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nfunction useTimer() {\n  _s();\n\n  const [number, setNumber] = useState(1);\n  const [isMultiple, setMultiple] = useState(false);\n  const [timer, setTimer] = useState(1);\n  const TIMER_INTERVAL = 1000;\n  const NUMBER_TIMEOUT = 5000;\n  const MESSAGE_TIMEOUT = 4000;\n  const MIN_RANDOM = 1;\n  const MAX_RANDOM = 100;\n\n  const increaseTimerInterval = () => setTimer(timer => timer + 1);\n\n  const verifyMultiple = randomNumber => {\n    if (randomNumber % 3 === 0 || randomNumber % 5 === 0) {\n      setMultiple(true);\n      setTimeout(() => setMultiple(false), MESSAGE_TIMEOUT);\n    }\n  };\n\n  const handleRandomNumber = () => {\n    const randomNumber = Math.round(Math.floor(Math.random() * MAX_RANDOM) + MIN_RANDOM);\n    verifyMultiple(randomNumber);\n    setNumber(randomNumber);\n    setTimer(0);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(handleRandomNumber, NUMBER_TIMEOUT);\n    const setTimerInterval = setInterval(increaseTimerInterval, TIMER_INTERVAL);\n    return () => {\n      clearInterval(interval);\n      clearInterval(setTimerInterval);\n    };\n  }, []);\n  return {\n    number,\n    isMultiple,\n    timer\n  };\n}\n\n_s(useTimer, \"KRU5vxyx+xYZiIRMwkCebizbcgE=\");\n\nexport default useTimer;","map":{"version":3,"sources":["/home/maria/trybe/trybe-exercises/modulo_2-Desenvolvimento_Front-End/bloco_17_-_Context_API_e_React_Hooks/17.3_-_React Hooks-useEffect_e_Hooks_customizados/conteudo/ex-use-effect/src/useTimer.js"],"names":["useState","useEffect","useTimer","number","setNumber","isMultiple","setMultiple","timer","setTimer","TIMER_INTERVAL","NUMBER_TIMEOUT","MESSAGE_TIMEOUT","MIN_RANDOM","MAX_RANDOM","increaseTimerInterval","verifyMultiple","randomNumber","setTimeout","handleRandomNumber","Math","round","floor","random","interval","setInterval","setTimerInterval","clearInterval"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACK,UAAD,EAAaC,WAAb,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMS,cAAc,GAAG,IAAvB;AACA,QAAMC,cAAc,GAAG,IAAvB;AACA,QAAMC,eAAe,GAAG,IAAxB;AACA,QAAMC,UAAU,GAAG,CAAnB;AACA,QAAMC,UAAU,GAAG,GAAnB;;AAEA,QAAMC,qBAAqB,GAAG,MAAMN,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAA5C;;AAEA,QAAMQ,cAAc,GAAGC,YAAY,IAAI;AACrC,QAAIA,YAAY,GAAG,CAAf,KAAqB,CAArB,IAA0BA,YAAY,GAAG,CAAf,KAAqB,CAAnD,EAAsD;AACpDV,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAW,MAAAA,UAAU,CAAC,MAAMX,WAAW,CAAC,KAAD,CAAlB,EAA2BK,eAA3B,CAAV;AACD;AACF,GALD;;AAOA,QAAMO,kBAAkB,GAAG,MAAM;AAC/B,UAAMF,YAAY,GAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,KAAgBT,UAA3B,IAAyCD,UAApD,CAArB;AACAG,IAAAA,cAAc,CAACC,YAAD,CAAd;AACAZ,IAAAA,SAAS,CAACY,YAAD,CAAT;AACAR,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GALD;;AAOAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,QAAQ,GAAGC,WAAW,CAACN,kBAAD,EAAqBR,cAArB,CAA5B;AACA,UAAMe,gBAAgB,GAAGD,WAAW,CAACV,qBAAD,EAAwBL,cAAxB,CAApC;AACA,WAAO,MAAM;AACXiB,MAAAA,aAAa,CAACH,QAAD,CAAb;AACAG,MAAAA,aAAa,CAACD,gBAAD,CAAb;AACD,KAHD;AAID,GAPQ,EAON,EAPM,CAAT;AASA,SAAO;AAAEtB,IAAAA,MAAF;AAAUE,IAAAA,UAAV;AAAsBE,IAAAA;AAAtB,GAAP;AACD;;GArCQL,Q;;AAuCT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useTimer() {\n  const [number, setNumber] = useState(1);\n  const [isMultiple, setMultiple] = useState(false);\n  const [timer, setTimer] = useState(1);\n\n  const TIMER_INTERVAL = 1000;\n  const NUMBER_TIMEOUT = 5000;\n  const MESSAGE_TIMEOUT = 4000;\n  const MIN_RANDOM = 1;\n  const MAX_RANDOM = 100;\n\n  const increaseTimerInterval = () => setTimer(timer => timer + 1);\n\n  const verifyMultiple = randomNumber => {\n    if (randomNumber % 3 === 0 || randomNumber % 5 === 0) {\n      setMultiple(true);\n      setTimeout(() => setMultiple(false), MESSAGE_TIMEOUT);\n    }\n  };\n\n  const handleRandomNumber = () => {\n    const randomNumber = Math.round(Math.floor(Math.random() * MAX_RANDOM) + MIN_RANDOM);\n    verifyMultiple(randomNumber);\n    setNumber(randomNumber);\n    setTimer(0);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(handleRandomNumber, NUMBER_TIMEOUT);\n    const setTimerInterval = setInterval(increaseTimerInterval, TIMER_INTERVAL);\n    return () => {\n      clearInterval(interval);\n      clearInterval(setTimerInterval);\n    };\n  }, []);\n\n  return { number, isMultiple, timer };\n}\n\nexport default useTimer;"]},"metadata":{},"sourceType":"module"}